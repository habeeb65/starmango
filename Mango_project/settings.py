"""
Django settings for Mango_project project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
MEDIA_URL = ''
MEDIA_ROOT = BASE_DIR / ''

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z5zrj!poao3_81z3&4#)hg29(xv7%pow%asnrqw+o*^l!@60b@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['habeeb321.pythonanywhere.com', '127.0.0.1', 'localhost']

# CORS Settings
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]



# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'Accounts',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'import_export',
    'tenants',
    'notifications.apps.NotificationsConfig',
    'analytics.apps.AnalyticsConfig',
    'forecasting.apps.ForecastingConfig',
    # API Documentation
    # 'drf_yasg',  # Commented out to avoid dependency
    # Security enhancements
    # 'django_otp',  # Temporarily commented out
    # 'django_otp.plugins.otp_totp',  # Temporarily commented out
    # 'django_otp.plugins.otp_static',  # Temporarily commented out
    # 'two_factor',  # Temporarily commented out
    # 'axes',  # Temporarily commented out
    # Real-time features
    # 'channels',  # Temporarily commented out
]

MIDDLEWARE = [
    'tenants.middleware.TenantMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # Two-factor authentication middleware
    # 'django_otp.middleware.OTPMiddleware',  # Temporarily commented out
    # Rate limiting and brute force protection
    # 'axes.middleware.AxesMiddleware',  # Temporarily commented out
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Configure Axes to use the database as a cache backend
# AXES_HANDLER = 'axes.handlers.database.AxesDatabaseHandler'  # Temporarily commented out


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'Accounts', 'Template'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Mango_project.wsgi.application'
# ASGI_APPLICATION = 'Mango_project.asgi.application'  # Temporarily commented out

# Channel layers for WebSocket support
# CHANNEL_LAYERS = {  # Temporarily commented out
#     'default': {
#         'BACKEND': 'channels.layers.InMemoryChannelLayer',
#     },
# }


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# REST Framework Settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler',
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '100/day',
        'user': '1000/day'
    }
}

# Import JWT settings
from .security import SIMPLE_JWT

# Two-factor authentication settings
# TWO_FACTOR_PATCH_ADMIN = True  # Temporarily commented out

#Manually Added
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'Accounts', 'static'),
]
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Star Mango Admin",
    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "Star Mango Supplies Korutla",
    # Logo to use for your site, must be present in static files
    "site_logo": None,
    # CSS classes that are applied to the logo
    "site_logo_classes": None,
    # Logo to use for login form in dark themes
    "login_logo": None,
    # Relative path to a favicon for your site, will default to site_logo if absent
    "site_icon": None,
    # Welcome text on the login screen
    "welcome_sign": "Welcome to Star Mango Supplies Admin",
    # Copyright on the footer
    "copyright": "Star Mango Ltd",

    # Field name on user model that contains avatar ImageField/URLField/Charfield or a callable that receives the user
    "user_avatar": None,

    # Top menu
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "Dashboard", "url": "admin-dashboard", "permissions": ["auth.view_user"]},
        {"name": "Credit Dashboard", "url": "credit_dashboard", "permissions": ["auth.view_user"]},
        {"name": "Vendor Summary", "url": "/accounts/vendor-summary/"},
        {"name": "Customer Summary", "url": "/accounts/customer-summary/"},
        {"name": "Vendor Bulk Payment", "url": "/accounts/vendor-bulk-payment/"},
        {"name": "Customer Bulk Payment", "url": "/accounts/customer-bulk-payment/"},
        {"name": "Inventory Management", "url": "/accounts/inventory-management/"},
    ],

    # Custom links to append to app groups, keyed on app name
    "custom_links": {
        "Accounts": [
            {"name": "Dashboard", "url": "admin-dashboard", "icon": "fas fa-chart-line"},
            {"name": "Credit Dashboard", "url": "credit_dashboard", "icon": "fas fa-credit-card"},
            {"name": "Credit Report", "url": "credit_report", "icon": "fas fa-file-invoice"}
        ]
    },

    # Override app/model ordering by 3 ways
    "order_with_respect_to": ["Accounts", "auth"],
    "custom_app_order": ["Accounts", "auth"],
    # Specify how models are ordered specifically by app
    "custom_apps_models": {
        "Accounts": [
            "PurchaseInvoice",
            "SalesInvoice",
            "PurchaseVendor",
            "Customer",
            "Product",
            "Payment",
            "Expense",
            "Damages",
        ],
    },

    # Specify an app to hide all of its models
    "hide_apps": [],

    # Specify models to hide
    "hide_models": [],

    # Specify how models are ordered
    "show_sidebar": True,
    "navigation_expanded": True,

    # Icons
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "Accounts.PurchaseInvoice": "fas fa-shopping-cart",
        "Accounts.SalesInvoice": "fas fa-cash-register",
        "Accounts.Product": "fas fa-box",
        "Accounts.PurchaseVendor": "fas fa-users",
        "Accounts.Customer": "fas fa-user-friends",
        "Accounts.Expense": "fas fa-money-bill",
        "Accounts.Damages": "fas fa-exclamation-triangle"
    },

    # UI Settings - Simplified to use built-in functionality
    "custom_css": "css/custom_admin.css",
    "custom_js": None,
    "use_google_fonts_cdn": True,
    "show_ui_builder": True,
    "changeform_format": "horizontal_tabs",
    "related_modal_active": True,
    "form_size": "default",
    "theme": "default",
    "dark_mode_theme": None,
}

# Ensure jQuery is included properly
JAZZMIN_INCLUDE_JQUERY = True
JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-primary",
    "accent": "accent-primary",
    "navbar": "navbar-white navbar-light",
    "no_navbar_border": False,
    "navbar_fixed": True,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-primary",
}

ROOT_URLCONF = 'Mango_project.urls'

# Add this setting to allow admin popups (which use iframes)
X_FRAME_OPTIONS = 'SAMEORIGIN'

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}

# JWT Settings
from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
}

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True  # Only for development, restrict in production!
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS',
]
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# Multi-tenant settings
TENANT_EXEMPT_URLS = [
    'admin',
    'static',
    'media',
    'accounts',
    'api',
    '',  # Root URL
]

# Add tenant-aware authentication backend
AUTHENTICATION_BACKENDS = [
    'tenants.backends.TenantAwareBackend',
    'django.contrib.auth.backends.ModelBackend',
]
